package queue;
import java.util.Scanner;

public class Queue {
	public static void main(String args[]) {
		System.out.println("Welcome");
		QueueImp ob1=new QueueImp();
		ob1.menu();
	}
}	

class QueueImp{
	int queue[],size,front,rear;
	
	QueueImp(){
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter size of Queue");
		size=sc.nextInt();
		
		queue=new int[size];
		front=-1;
		rear=-1;
		
		System.out.println("Your queue is initialized");	
	}
	
	void enqueue(int x) {
		
		if(isFull()) {
			System.out.println("Queue Overflow");
		}
		
		else {
			if(front == -1) front = 0;
			rear++;
			queue[rear]=x;
		}
	}
	
	int dequeue() {
		int t;
		
        if(isEmpty()) {
            System.out.println("Queue Underflow");
            return -1;
        }
        
        else {
            t = queue[front];
            if(front >= rear) {
                front = -1;
                rear = -1;
            }
            else {
                front++;
            }
            return t;
        }
    }
	
	boolean isFull(){
		if (rear==size-1){
			return true;
			}
		else {
			return false;
		}
    }
	
	boolean isEmpty(){
        if (front == -1)
            return true;
        else
            return false;
    }

    void menu() {
        Scanner sc=new Scanner(System.in);
        int choice, x;

        do {
            System.out.println("\n1. Enqueue");
            System.out.println("2. Dequeue");
            System.out.println("3. Display Queue");
            System.out.println("4. Exit");
            System.out.print("Enter your choice: ");
            choice = sc.nextInt();

            switch(choice) {
                case 1: System.out.print("Enter a number to enqueue: ");
                        x = sc.nextInt();
                        enqueue(x);
                        break;

                case 2: x = dequeue();
                        if(x != -1) {
                            System.out.println("Dequeued " + x);
                        }
                        break;

                case 3: display();
                        break;

                case 4: break;

                default: System.out.println("Invalid choice. Please try again.");
            }
        } while(choice != 4);
    }

    void display() {
        if(isEmpty()) {
            System.out.println("Queue is empty.");
        } else {
            System.out.print("Queue: ");
            for(int i=front; i<=rear; i++) {
                System.out.print(queue[i] + " ");
            }
            System.out.println();
        }
    }
}
